//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.04.14 at 04:14:26 PM BST 
//


package org.isisaddons.wicket.summernote.fixture.dom.generated.xml.skos;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.ecompliance.xml package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _FragmentSkosConceptOccurrences_QNAME = new QName("", "fragment_skos_concept_occurrences");
    private final static QName _IriList_QNAME = new QName("", "iri_list");
    private final static QName _ShipClassOccurrence_QNAME = new QName("", "ship_class_occurrence");
    private final static QName _DocumentRoot_QNAME = new QName("", "document_root");
    private final static QName _DocumentComponentList_QNAME = new QName("", "document_component_list");
    private final static QName _IndividualShip_QNAME = new QName("", "individual_ship");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.ecompliance.xml
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link FragmentSKOSConceptOccurrences }
     * 
     */
    public FragmentSKOSConceptOccurrences createFragmentSKOSConceptOccurrences() {
        return new FragmentSKOSConceptOccurrences();
    }

    /**
     * Create an instance of {@link IRIList }
     * 
     */
    public IRIList createIRIList() {
        return new IRIList();
    }

    /**
     * Create an instance of {@link ShipClass }
     * 
     */
    public  ShipClass createShipClass() {
        return new  ShipClass();
    }

    /**
     * Create an instance of {@link DocumentRoot }
     * 
     */
    public DocumentRoot createDocumentRoot() {
        return new DocumentRoot();
    }

    /**
     * Create an instance of {@link DocumentComponentList }
     * 
     */
    public DocumentComponentList createDocumentComponentList() {
        return new DocumentComponentList();
    }

    /**
     * Create an instance of {@link IndividualShip }
     * 
     */
    public IndividualShip createIndividualShip() {
        return new IndividualShip();
    }

    /**
     * Create an instance of {@link DocumentComponent }
     * 
     */
    public DocumentComponent createDocumentComponent() {
        return new DocumentComponent();
    }

    /**
     * Create an instance of {@link SKOSConceptOccurrence }
     * 
     */
    public  SKOSConceptOccurrence createSKOSConceptOccurrence() {
        return new  SKOSConceptOccurrence();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FragmentSKOSConceptOccurrences }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "fragment_skos_concept_occurrences")
    public JAXBElement<FragmentSKOSConceptOccurrences> createFragmentSkosConceptOccurrences(FragmentSKOSConceptOccurrences value) {
        return new JAXBElement<FragmentSKOSConceptOccurrences>(_FragmentSkosConceptOccurrences_QNAME, FragmentSKOSConceptOccurrences.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IRIList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "iri_list")
    public JAXBElement<IRIList> createIriList(IRIList value) {
        return new JAXBElement<IRIList>(_IriList_QNAME, IRIList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShipClass }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ship_class_occurrence")
    public JAXBElement< ShipClass> createShipClassOccurrence( ShipClass value) {
        return new JAXBElement< ShipClass>(_ShipClassOccurrence_QNAME,  ShipClass.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DocumentRoot }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "document_root")
    public JAXBElement<DocumentRoot> createDocumentRoot(DocumentRoot value) {
        return new JAXBElement<DocumentRoot>(_DocumentRoot_QNAME, DocumentRoot.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DocumentComponentList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "document_component_list")
    public JAXBElement<DocumentComponentList> createDocumentComponentList(DocumentComponentList value) {
        return new JAXBElement<DocumentComponentList>(_DocumentComponentList_QNAME, DocumentComponentList.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IndividualShip }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "individual_ship")
    public JAXBElement<IndividualShip> createIndividualShip(IndividualShip value) {
        return new JAXBElement<IndividualShip>(_IndividualShip_QNAME, IndividualShip.class, null, value);
    }

}
